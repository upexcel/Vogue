{"version":3,"sources":["../src/db.js"],"names":["db","sequelize","Sequelize","environment","config","name","username","password","port","host","dialect","logging","Object","keys","models","forEach","modelName","model","DataTypes","err","console","log","associate","sync","then","assign"],"mappings":";;;;;;AAAA;;;;AAEA;;;;AACA;;;;;;AAFA;AAIA,IAAMA,KAAK,EAAX;AACA,IAAMC,YAAY,IAAIC,mBAAJ,CAAcC,sBAAYC,MAAZ,CAAmBJ,EAAnB,CAAsBK,IAApC,EAA0CF,sBAAYC,MAAZ,CAAmBJ,EAAnB,CAAsBM,QAAhE,EAA0EH,sBAAYC,MAAZ,CAAmBJ,EAAnB,CAAsBO,QAAhG,EAA0G,EAAEC,MAAML,sBAAYC,MAAZ,CAAmBJ,EAAnB,CAAsBQ,IAA9B,EAAoCC,MAAMN,sBAAYC,MAAZ,CAAmBJ,EAAnB,CAAsBS,IAAhE,EAAsEC,SAAS,OAA/E,EAAwFC,SAAS,KAAjG,EAA1G,CAAlB;;AAEA;AACAC,OAAOC,IAAP,CAAYC,gBAAZ,EAAoBC,OAApB,CAA4B,UAACC,SAAD,EAAe;AACvC,QAAMC,QAAQH,iBAAOE,SAAP,EAAkBf,SAAlB,EAA6BC,oBAAUgB,SAAvC,EAAkDhB,mBAAlD,CAAd;AACAF,OAAGgB,SAAH,IAAgBC,KAAhB;AACH,CAHD,EAGG,UAACE,GAAD,EAAS;AAAEC,YAAQC,GAAR,CAAYF,GAAZ;AAAkB,CAHhC;;AAKA;AACAP,OAAOC,IAAP,CAAYb,EAAZ,EAAgBe,OAAhB,CAAwB,UAACC,SAAD,EAAe;AACnC,QAAIhB,GAAGgB,SAAH,EAAcM,SAAlB,EAA6B;AACzBtB,WAAGgB,SAAH,EAAcM,SAAd,CAAwBtB,EAAxB;AACH;AACJ,CAJD,EAIG,UAACmB,GAAD,EAAS;AAAEC,YAAQC,GAAR,CAAYF,GAAZ;AAAkB,CAJhC;;AAMAlB,UAAUsB,IAAV,GAAiBC,IAAjB,CAAsB,YAAM,CAAE,CAA9B;;kBAEeZ,OAAOa,MAAP,CAAc,EAAd,EAAkBzB,EAAlB,EAAsB;AACjCC,wBADiC;AAEjCC;AAFiC,CAAtB,C","file":"db.js","sourcesContent":["import Sequelize from \"sequelize\";\n// import migrations from './migrations'\nimport models from \"./models\";\nimport environment from \"./environment.js\";\n\nconst db = {};\nconst sequelize = new Sequelize(environment.config.db.name, environment.config.db.username, environment.config.db.password, { port: environment.config.db.port, host: environment.config.db.host, dialect: 'mysql', logging: false });\n\n// load models\nObject.keys(models).forEach((modelName) => {\n    const model = models[modelName](sequelize, Sequelize.DataTypes, Sequelize);\n    db[modelName] = model;\n}, (err) => { console.log(err) });\n\n// invoke associations on each of the models\nObject.keys(db).forEach((modelName) => {\n    if (db[modelName].associate) {\n        db[modelName].associate(db);\n    }\n}, (err) => { console.log(err) });\n\nsequelize.sync().then(() => {})\n\nexport default Object.assign({}, db, {\n    sequelize,\n    Sequelize\n});"]}