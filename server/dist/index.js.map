{"version":3,"sources":["../src/index.js"],"names":["app","server","http","createServer","set","use","exposedHeaders","environment","config","corsHeaders","corsOptions","origin","methods","allowedHeaders","credentials","bodyParser","json","limit","bodyLimit","urlencoded","extended","express","static","__dirname","initRoutes","cwd","path","resolve","err","routes","console","log","forEach","routePath","require","default","length","listen","process","env","PORT"],"mappings":";;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ,C,CAXA;;AAYAA,IAAIC,MAAJ,GAAaC,eAAKC,YAAL,CAAkBH,GAAlB,CAAb;AACAA,IAAII,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;AACAJ,IAAIK,GAAJ,CAAQ,oBAAK;AACTC,oBAAgBC,sBAAYC,MAAZ,CAAmBC;AAD1B,CAAL,CAAR;AAGA,IAAIC,cAAc;AACdC,YAAQ,IADM;AAEdC,aAAS,CAAC,wCAAD,CAFK;AAGdC,oBAAgB,CAAC,QAAD,EAAW,cAAX,EAA2B,eAA3B,EAA4C,kBAA5C,EAAgE,QAAhE,EAA0E,MAA1E,CAHF;AAIdC,iBAAa;AAJC,CAAlB;AAMAd,IAAIK,GAAJ,CAAQ,oBAAKK,WAAL,CAAR;;AAEAV,IAAIK,GAAJ,CAAQU,qBAAWC,IAAX,CAAgB;AACpBC,WAAOV,sBAAYC,MAAZ,CAAmBU;AADN,CAAhB,CAAR;AAGAlB,IAAIK,GAAJ,CAAQU,qBAAWI,UAAX,CAAsB;AAC1BC,cAAU;AADgB,CAAtB,CAAR;AAGApB,IAAIK,GAAJ,CAAQgB,kBAAQC,MAAR,CAAeC,SAAf,CAAR;AACAvB,IAAIK,GAAJ,CAAQ,iCAAR;;AAEA,IAAMmB,aAAa,SAAbA,UAAa,CAACxB,GAAD,EAAS;AACxB;AACA,wBAAK,eAAL,EAAsB;AAClByB,aAAKC,eAAKC,OAAL,CAAa,OAAb;AADa,KAAtB,EAEG,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAChB,YAAID,GAAJ,EAAS;AACLE,oBAAQC,GAAR,CAAY,gCAAZ;AACA;AACH;AACDF,eAAOG,OAAP,CAAe,UAACC,SAAD,EAAe;AAC1BC,oBAAQD,SAAR,EAAmBE,OAAnB,CAA2BnC,GAA3B,EAD0B,CACO;AACpC,SAFD;AAGA8B,gBAAQC,GAAR,CAAY,cAAcF,OAAOO,MAArB,GAA8B,cAA1C;AACH,KAXD;AAYH,CAdD;;AAgBAZ,WAAWxB,GAAX;AACAA,IAAIC,MAAJ,CAAWoC,MAAX,CAAkBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAtC,EAA4C,YAAW;AACnDV,YAAQC,GAAR,CAAY,qBAAqB,IAAjC;AACH,CAFD;;kBAIe/B,G","file":"index.js","sourcesContent":["/* eslint-disable*/\nimport http from \"http\";\nimport express from \"express\";\nimport cors from \"cors\";\nimport bodyParser from \"body-parser\";\nimport environment from './environment';\nimport db from './db';\nimport expressValidator from \"express-validator\";\nimport glob from \"glob\";\nimport path from \"path\";\n\nconst app = express();\napp.server = http.createServer(app);\napp.set('view engine', 'jade');\napp.use(cors({\n    exposedHeaders: environment.config.corsHeaders\n}));\nvar corsOptions = {\n    origin: true,\n    methods: ['GET, POST, OPTIONS, PUT, PATCH, DELETE'],\n    allowedHeaders: ['Origin', 'Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Link'],\n    credentials: true\n};\napp.use(cors(corsOptions));\n\napp.use(bodyParser.json({\n    limit: environment.config.bodyLimit\n}));\napp.use(bodyParser.urlencoded({\n    extended: true\n}));\napp.use(express.static(__dirname))\napp.use(expressValidator());\n\nconst initRoutes = (app) => {\n    // including all routes\n    glob(\"./routes/*.js\", {\n        cwd: path.resolve(\"./src\")\n    }, (err, routes) => {\n        if (err) {\n            console.log(\"Error occured including routes\");\n            return;\n        }\n        routes.forEach((routePath) => {\n            require(routePath).default(app); // eslint-disable-line\n        });\n        console.log(\"included \" + routes.length + \" route files\");\n    });\n};\n\ninitRoutes(app);\napp.server.listen(process.env.PORT || 5001, function() {\n    console.log(\"Started on port \" + 5001);\n});\n\nexport default app;"]}