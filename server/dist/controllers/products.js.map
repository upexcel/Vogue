{"version":3,"sources":["../../src/controllers/products.js"],"names":["UserController","createProducts","req","res","next","form","formidable","IncomingForm","parse","err","fields","files","file","substr","lastIndexOf","toLowerCase","status","json","error","message","fs","readFile","path","data","csv","toString","lines","split","result","headers","i","length","obj","currentline","j","push","db","products","findAll","then","resp","arrToDelete","_","map","val","key","findProduct","find","get","ProductID","destroy","where","console","log","forEach","ImageFullsizeURL","findOne","product","update","create","getProducts","handleErrorResponse","searchProducts","productID","$like","params","BaseAPIController","controller"],"mappings":"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","file":"products.js","sourcesContent":["import BaseAPIController from \"./BaseAPIController\";\nimport provideUser from \"../providers/user\";\nimport db from '../db.js';\nimport _ from \"lodash\";\nimport formidable from \"formidable\";\nimport fs from \"fs\";\nimport csvjson from \"csvjson\";\nimport path from \"path\";\n\nexport class UserController extends BaseAPIController {\n\n    createProducts = (req, res, next) => {\n        let form = new formidable.IncomingForm();\n        form.parse(req, function(err, fields, files) {\n            if (files.file) {\n                if (files.file['name'].substr(files.file['name'].lastIndexOf('.') + 1).toLowerCase() != 'csv') {\n                    res.status(400).json({ error: 1, message: \"please upload csv file\" })\n                } else {\n                    fs.readFile(files.file.path, function(err, data) {\n                        var csv = data.toString('utf8')\n                        var lines = csv.split(\"\\n\");\n                        var result = [];\n                        var headers = lines[0].split(\",\");\n                        for (var i = 1; i < lines.length; i++) {\n                            var obj = {};\n                            var currentline = lines[i].split(/,/);\n                            for (var j = 0; j < headers.length; j++) {\n\n                                obj[headers[j]] = currentline[j] ? currentline[j] : null;\n                            }\n                            result.push(obj);\n                        }\n\n                        db.products.findAll({}).then((resp) => {\n                            var arrToDelete = []\n                            _.map(resp, (val, key) => {\n                                let findProduct = _.find(result, function(get) { return get.ProductID == val.ProductID; });\n                                if (!findProduct) {\n                                    arrToDelete.push(val.ProductID)\n                                }\n                            })\n                            db.products.destroy({ where: { ProductID: arrToDelete } }).then((data) => {\n                                console.log(data, \"deleted\")\n                            })\n                        })\n\n                        _.forEach(result, (val, key) => {\n                            delete val.ImageFullsizeURL;\n                            db.products.findOne({ where: { ProductID: val.ProductID } }).then((product) => {\n                                if (product) {\n                                    db.products.update(val, { where: { ProductID: val.ProductID } }).then((data) => {})\n                                } else {\n                                    db.products.create(val).then((data) => {})\n                                }\n                            })\n                            if (key == result.length - 1) {\n                                res.json({ status: 1, message: \"success\" })\n                            }\n                        })\n                    })\n                }\n            } else {\n                res.status(400).json({ error: 1, message: \"file not recieved\" })\n            }\n        })\n    }\n\n    getProducts = (req, res, next) => {\n        db.products.findAll({}).then((data) => {\n            res.json({ status: 1, data: data })\n        }, (err) => this.handleErrorResponse(res, err))\n    }\n\n    searchProducts = (req, res, next) => {\n        db.products.findAll({ where: { productID: { $like: '%' + req.params.productID + '%' } } }).then((data) => {\n            res.json({ status: 1, data: data })\n        }, (err) => this.handleErrorResponse(res, err))\n    }\n\n}\n\nconst controller = new UserController();\nexport default controller;"]}