{"version":3,"sources":["../../src/controllers/user.js"],"names":["UserController","createUser","req","res","next","db","users","create","body","then","data","json","status","err","handleErrorResponse","updateUser","update","where","id","response","deleteUser","destroy","params","BaseAPIController","controller"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;IACaA,c,WAAAA,c;;;;;;;;;;;;;;0MAETC,U,GAAa,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC7B;AACAC,yBAAGC,KAAH,CAASC,MAAT,CAAgBL,IAAIM,IAApB,EAA0BC,IAA1B,CAA+B,UAACC,IAAD,EAAU;AACrCP,oBAAIQ,IAAJ,CAAS,EAAEC,QAAQ,CAAV,EAAaF,MAAMA,IAAnB,EAAT;AACH,aAFD,EAEG,UAACG,GAAD;AAAA,uBAAS,MAAKC,mBAAL,CAAyBX,GAAzB,EAA8BU,GAA9B,CAAT;AAAA,aAFH;AAGA;AACH,S,QAEDE,U,GAAa,UAACb,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC7BC,yBAAGC,KAAH,CAASU,MAAT,CAAgBd,IAAIM,IAApB,EAA0B,EAAES,OAAO,EAAEC,IAAIhB,IAAIM,IAAJ,CAASU,EAAf,EAAT,EAA1B,EAA0DT,IAA1D,CAA+D,UAACU,QAAD,EAAc;AACzEhB,oBAAIQ,IAAJ,CAAS,EAAEC,QAAQ,CAAV,EAAaF,MAAMS,QAAnB,EAAT;AACH,aAFD,EAEG,UAACN,GAAD;AAAA,uBAAS,MAAKC,mBAAL,CAAyBX,GAAzB,EAA8BU,GAA9B,CAAT;AAAA,aAFH;AAGH,S,QAEDO,U,GAAa,UAAClB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC7BC,yBAAGC,KAAH,CAASe,OAAT,CAAiB,EAAEJ,OAAO,EAAEC,IAAIhB,IAAIoB,MAAJ,CAAWJ,EAAjB,EAAT,EAAjB,EAAmDT,IAAnD,CAAwD,UAACU,QAAD,EAAc;AAClEhB,oBAAIQ,IAAJ,CAAS,EAAEC,QAAQ,CAAV,EAAaF,MAAMS,QAAnB,EAAT;AACH,aAFD,EAEG,UAACN,GAAD;AAAA,uBAAS,MAAKC,mBAAL,CAAyBX,GAAzB,EAA8BU,GAA9B,CAAT;AAAA,aAFH;AAGH,S;;;;EApB+BU,2B;;AAwBpC,IAAMC,aAAa,IAAIxB,cAAJ,EAAnB;kBACewB,U","file":"user.js","sourcesContent":["import BaseAPIController from \"./BaseAPIController\";\nimport provideUser from \"../providers/user\";\nimport db from '../db.js'\nexport class UserController extends BaseAPIController {\n\n    createUser = (req, res, next) => {\n        // provideUser.createUser(req.checkBody, req.body, req.getValidationResult()).then((body) => {\n        db.users.create(req.body).then((data) => {\n            res.json({ status: 1, data: data })\n        }, (err) => this.handleErrorResponse(res, err))\n        // }, (err) => this.handleErrorResponse(res, err))\n    }\n\n    updateUser = (req, res, next) => {\n        db.users.update(req.body, { where: { id: req.body.id } }).then((response) => {\n            res.json({ status: 1, data: response })\n        }, (err) => this.handleErrorResponse(res, err))\n    }\n\n    deleteUser = (req, res, next) => {\n        db.users.destroy({ where: { id: req.params.id } }).then((response) => {\n            res.json({ status: 1, data: response })\n        }, (err) => this.handleErrorResponse(res, err))\n    }\n\n}\n\nconst controller = new UserController();\nexport default controller;"]}