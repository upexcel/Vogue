{"version":3,"sources":["../../src/controllers/user.js"],"names":["UserController","createUser","req","res","next","db","users","create","body","then","data","json","status","err","handleErrorResponse","getAllusers","findAll","updateUser","update","where","id","response","deleteUser","destroy","params","getUserById","findOne","error","message","BaseAPIController","controller"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;IACaA,c,WAAAA,c;;;;;;;;;;;;;;0MAETC,U,GAAa,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC7B;AACAC,yBAAGC,KAAH,CAASC,MAAT,CAAgBL,IAAIM,IAApB,EAA0BC,IAA1B,CAA+B,UAACC,IAAD,EAAU;AACrCP,oBAAIQ,IAAJ,CAAS,EAAEC,QAAQ,CAAV,EAAaF,MAAMA,IAAnB,EAAT;AACH,aAFD,EAEG,UAACG,GAAD;AAAA,uBAAS,MAAKC,mBAAL,CAAyBX,GAAzB,EAA8BU,GAA9B,CAAT;AAAA,aAFH;AAGA;AACH,S,QAEDE,W,GAAc,UAACb,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC9BC,yBAAGC,KAAH,CAASU,OAAT,CAAiB,EAAjB,EAAqBP,IAArB,CAA0B,UAACC,IAAD,EAAU;AAChCP,oBAAIQ,IAAJ,CAAS,EAAEC,QAAQ,CAAV,EAAaF,MAAMA,IAAnB,EAAT;AACH,aAFD,EAEG,UAACG,GAAD;AAAA,uBAAS,MAAKC,mBAAL,CAAyBX,GAAzB,EAA8BU,GAA9B,CAAT;AAAA,aAFH;AAGH,S,QAEDI,U,GAAa,UAACf,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC7BC,yBAAGC,KAAH,CAASY,MAAT,CAAgBhB,IAAIM,IAApB,EAA0B,EAAEW,OAAO,EAAEC,IAAIlB,IAAIM,IAAJ,CAASY,EAAf,EAAT,EAA1B,EAA0DX,IAA1D,CAA+D,UAACY,QAAD,EAAc;AACzElB,oBAAIQ,IAAJ,CAAS,EAAEC,QAAQ,CAAV,EAAaF,MAAMW,QAAnB,EAAT;AACH,aAFD,EAEG,UAACR,GAAD;AAAA,uBAAS,MAAKC,mBAAL,CAAyBX,GAAzB,EAA8BU,GAA9B,CAAT;AAAA,aAFH;AAGH,S,QAEDS,U,GAAa,UAACpB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC7BC,yBAAGC,KAAH,CAASiB,OAAT,CAAiB,EAAEJ,OAAO,EAAEC,IAAIlB,IAAIsB,MAAJ,CAAWJ,EAAjB,EAAT,EAAjB,EAAmDX,IAAnD,CAAwD,UAACY,QAAD,EAAc;AAClElB,oBAAIQ,IAAJ,CAAS,EAAEC,QAAQ,CAAV,EAAaF,MAAMW,QAAnB,EAAT;AACH,aAFD,EAEG,UAACR,GAAD;AAAA,uBAAS,MAAKC,mBAAL,CAAyBX,GAAzB,EAA8BU,GAA9B,CAAT;AAAA,aAFH;AAGH,S,QAEDY,W,GAAc,UAACvB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC9BC,yBAAGC,KAAH,CAASoB,OAAT,CAAiB,EAAEP,OAAO,EAAEC,IAAIlB,IAAIsB,MAAJ,CAAWJ,EAAjB,EAAT,EAAjB,EAAmDX,IAAnD,CAAwD,UAACC,IAAD,EAAU;AAC9D,oBAAIA,IAAJ,EAAU;AACNP,wBAAIQ,IAAJ,CAAS,EAAEC,QAAQ,CAAV,EAAaF,MAAMA,IAAnB,EAAT;AACH,iBAFD,MAEO;AACHP,wBAAIS,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB,EAAEgB,OAAO,CAAT,EAAYC,SAAS,gBAArB,EAArB;AACH;AACJ,aAND,EAMG,UAACf,GAAD;AAAA,uBAAS,MAAKC,mBAAL,CAAyBX,GAAzB,EAA8BU,GAA9B,CAAT;AAAA,aANH;AAOH,S;;;;EApC+BgB,2B;;AAuCpC,IAAMC,aAAa,IAAI9B,cAAJ,EAAnB;kBACe8B,U","file":"user.js","sourcesContent":["import BaseAPIController from \"./BaseAPIController\";\nimport provideUser from \"../providers/user\";\nimport db from '../db.js'\nexport class UserController extends BaseAPIController {\n\n    createUser = (req, res, next) => {\n        // provideUser.createUser(req.checkBody, req.body, req.getValidationResult()).then((body) => {\n        db.users.create(req.body).then((data) => {\n            res.json({ status: 1, data: data })\n        }, (err) => this.handleErrorResponse(res, err))\n        // }, (err) => this.handleErrorResponse(res, err))\n    }\n\n    getAllusers = (req, res, next) => {\n        db.users.findAll({}).then((data) => {\n            res.json({ status: 1, data: data })\n        }, (err) => this.handleErrorResponse(res, err))\n    }\n\n    updateUser = (req, res, next) => {\n        db.users.update(req.body, { where: { id: req.body.id } }).then((response) => {\n            res.json({ status: 1, data: response })\n        }, (err) => this.handleErrorResponse(res, err))\n    }\n\n    deleteUser = (req, res, next) => {\n        db.users.destroy({ where: { id: req.params.id } }).then((response) => {\n            res.json({ status: 1, data: response })\n        }, (err) => this.handleErrorResponse(res, err))\n    }\n\n    getUserById = (req, res, next) => {\n        db.users.findOne({ where: { id: req.params.id } }).then((data) => {\n            if (data) {\n                res.json({ status: 1, data: data })\n            } else {\n                res.status(400).json({ error: 1, message: \"user not exist\" })\n            }\n        }, (err) => this.handleErrorResponse(res, err))\n    }\n}\n\nconst controller = new UserController();\nexport default controller;"]}